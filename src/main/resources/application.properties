spring.application.name=${APP_NAME:@project.name@}
spring.devtools.add-properties=false
server.port=9090
google.drive.download.url=https://drive.usercontent.google.com/download?id={fileId}&export=download&authuser=0
url.pattern.google-drive=^https:\/\/drive\.google\.com\/file\/d\/([a-zA-Z0-9_-]+)\/?.*$
url.pattern.dropbox=^https:\/\/www\.dropbox\.com\/?.*$
url.pattern.google-drive-file-id=https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([^\\/]+)\\/?


#payu
com.kumar.payment.gateways.payu.payuApiUrl=${PAYU_API_URL:https://test.payu.in}
com.kumar.payment.gateways.payu.payuMerchantKey=${PAYU_MERCHANT_KEY:zyzyzy}
com.kumar.payment.gateways.payu.payuSaltKey=${PAYU_SALT_KEY:zbbbbcbbc}
com.kumar.payment.gateways.payu.surl=${SURL:https://billing-api.dev.com/api/hooks/payment/payu/success}
com.kumar.payment.gateways.payu.furl=${FURL:https://billing-api.dev.com/api/hooks/payment/payu/failed}

#enums list
com.value-lists.mappings.OrgType=com.kumar.springbootlearning.valuelist.enums.OrgType
com.value-lists.mappings.SpanLevel=com.kumar.springbootlearning.valuelist.enums.SpanLevel

#logistiex async task config
com.async.enabled=${ASYNC_ENABLED:true}
#com.async.executors.primary.corePoolSize=${PRIMARY_CORE_POOL_SIZE:5}
#com.async.executors.primary.maxPoolSize=${PRIMARY_MAX_POOL_SIZE:20}
#com.async.executors.primary.queueCapacity=${PRIMARY_QUEUE_CAPACITY:500}
#com.async.executors.primary.keepAliveSeconds=${PRIMARY_KEEP_ALIVE_SECONDS:120}

com.async.executors.secondary.corePoolSize=${SECONDARY_CORE_POOL_SIZE:2}
com.async.executors.secondary.maxPoolSize=${SECONDARY_MAX_POOL_SIZE:5}
com.async.executors.secondary.queueCapacity=${SECONDARY_QUEUE_CAPACITY:100}
com.async.executors.secondary.keepAliveSeconds=${SECONDARY_KEEP_ALIVE_SECONDS:60}

# Remote Service Endpoints
come.delegate.service.uri.abc-core=${ABC_CORE_SERVICE_URI:https://abc-core-api.dev.com}
com.delegate.service.uri.catalog=${CATALOG_SERVICE_URI:https://catalog-api.dev.com}
com.delegate.service.uri.storage-service=${STORAGE_SERVICE_URI:https://storage.dev.com}
com.delegate.service.uri.mool=${MOOL_SERVICE_URI:https://mool-api.dev.com}
com.shipping.end-point=shipping/v2/shipmentorders

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#spring.thymeleaf.cache=false  # Useful for development

welcome.message=Hello, welcome to my world

#cache config
#initialCapacity=100
#maximumSize=1000
#expireAfterWrite=10m
#expireAfterAccess=5m
#refreshAfterWrite=2m
com.cache.enabled=true
#com.cache.caches.caffeine.provider=CAFFEINE
#com.cache.caches.caffeine.cacheNames=["products","productCategoryCache"]
#com.cache.caches.caffeine.maximumSize=500
#com.cache.caches.caffeine.ttlAfterWrite=10

logging.level.org.springframework.cache=DEBUG
org.springframework.cache.interceptor.CacheInterceptor=TRACE
management.endpoints.web.exposure.include=caches

# Redis config
com.cache.caches.redis.provider=REDIS
com.cache.caches.redis.cacheNames=["products", "users"]
com.cache.caches.redis.remoteHost=localhost
com.cache.caches.redis.port=6379
com.cache.caches.redis.ttlAfterWrite=60
#docker run --name redis-cache -p 6379:6379 -d redis
#docker exec -it redis-cache redis-cli
spring.devtools.restart.enabled=false
